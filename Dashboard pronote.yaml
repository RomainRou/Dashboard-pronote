#carte mise a jour pronote
type: vertical-stack
cards:
  - type: custom:mushroom-entity-card
    entity: sensor.pronote_NOM_PRENOM
    secondary_info: last-updated
    icon: mdi:update
    name: Derniere mise a jour pronote
    icon_color: green
#carte emploi du temp du jour    
  - type: vertical-stack
    cards:
      - type: markdown
        content: >-
          <div>{% set items =
          state_attr('sensor.pronote_NOM_PRENOM_timetable_today','lessons')
          %}üìÜ Emploi du temps du : {{as_timestamp(items[0].start_at)
          | int |timestamp_custom('%d/%m/%Y', true)}}</div> 
            <table>   
              {% for i in range(0,items | count, 1) %}  
            <tr>  
              {%- if items[i].canceled != True -%}  
              <td width='12%'>
                <mark>{{ items[i].start_time}}</mark>
              </td>  
              <td>
                <mark>{{items[i].end_time }}</mark>
              </td>
              <td>{{ items[i].lesson }} {% else %}
                <td>
                  <del>{{ items[i].start_time }}</del>
                </td> 
                <td>
                  <del>{{ items[i].end_time}}</del>
                </td>
                <td>
                  <del>{{ items[i].lesson }}</del>&emsp;{%- endif -%}{% if items[i].status!= None %} 
                  <br><span>{{ items[i].status }}</span>
                </td> 
                  {% endif %} <td>
                  <h1>{{items[i].classroom }}</h1>
                </td> 
              </tr> {% endfor %} 
              </table> 
        card_mod:
          style:
            .: |
              ha-card ha-markdown {
                padding:0px
              }
              ha-card ha-markdown.no-header {
                padding:0px
              }
              ha-markdown {
                  max-height: 190px;
                  overflow-y: auto;
                  border-bottom-left-radius: 10px; 
                  border-bottom-right-radius: 10px;
                  border-top-left-radius: 10px; 
                  border-top-right-radius: 10px;
                }
            ha-markdown$: |
              div {
                  background-color:rgb(54, 54, 54, 0.3);
                  padding: 5px 5px;
                  color:white;
                  font-weight:normal;
                  font-size:1em;
                  border-top-left-radius: 10px; 
                  border-top-right-radius: 10px; 
                  text-align: center;
              }
              table{
                border-collapse: collapse;
                font-size: 0.7em;
                font-family: Roboto;
                width: 100%;
                outline: 0px solid #393c3d;
                margin-top:5px
              } caption {
                  font-weight: bold;
                  font-size: 1.2em;
              } td {
                  padding: 5px 8px 5px 8px;
                  text-align: left;
                  border-bottom: 0px solid #1c2020;
              }
              tr {
                  border-bottom: 0px solid #1c2020;
              }

              tr:nth-of-type(even) {
                  background-color: rgb(54, 54, 54, 0.3);
              }
              tr:last-of-type {
                  border-bottom: transparent;          }
              mark {
                  background: #00E199 ;
                  color: #222627;
                  border-radius: 5px;
                  padding: 5px;
                  border: solid #008d60 2px;
              }
              h1 {
                  background: white;
                  color: black;
                  border-radius: 5px;
                  padding: 5px;
                  font-size: 0.7em;
                  font-weight:normal;
                  text-align: center; 
                  border: solid #E5E2E1 2px;
              }
              class {
                  background: #00E199;
                  color: #222627;
                  border-radius: 10px;
                  padding: 5px;
              }
              span {
                  background: #EC4B34;
                  color: #222627;
                  border-radius: 5px;
                  padding: 5px;
              }
              tr:nth-child(n+2) > td:nth-child(2) {
                text-align: left;
              }
#carte emploi du temps du prochain jour              
      - type: markdown
        content: >-
          <div>{% set items =
          state_attr('sensor.pronote_NOM_PRENOM_timetable_next_day','lessons')
          %}üìÜ Emploi du temps du : {{as_timestamp(items[0].start_at)
          | int |timestamp_custom('%d/%m/%Y', true)}}</div> 
            <table>   
              {% for i in range(0,items | count, 1) %}  
            <tr>  
              {%- if items[i].canceled != True -%}  
              <td width='12%'>
                <mark>{{ items[i].start_time}}</mark>
              </td>  
              <td>
                <mark>{{items[i].end_time }}</mark>
              </td>
              <td>{{ items[i].lesson }} {% else %}
                <td>
                  <del>{{ items[i].start_time }}</del>
                </td> 
                <td>
                  <del>{{ items[i].end_time}}</del>
                </td>
                <td>
                  <del>{{ items[i].lesson }}</del>&emsp;{%- endif -%}{% if items[i].status!= None %} 
                  <br><span>{{ items[i].status }}</span>
                </td> 
                  {% endif %} <td>
                  <h1>{{items[i].classroom }}</h1>
                </td> 
              </tr> {% endfor %} 
              </table> 
        card_mod:
          style:
            .: |
              ha-card ha-markdown {
                padding:0px
              }
              ha-card ha-markdown.no-header {
                padding:0px
              }
              ha-markdown {
                  max-height: 190px;
                  overflow-y: auto;
                  border-bottom-left-radius: 10px; 
                  border-bottom-right-radius: 10px;
                  border-top-left-radius: 10px; 
                  border-top-right-radius: 10px;
                }
            ha-markdown$: |
              div {
                  background-color:rgb(54, 54, 54, 0.3);
                  padding: 5px 5px;
                  color:white;
                  font-weight:normal;
                  font-size:1em;
                  border-top-left-radius: 10px; 
                  border-top-right-radius: 10px; 
                  text-align: center;
              }
              table{
                border-collapse: collapse;
                font-size: 0.7em;
                font-family: Roboto;
                width: 100%;
                outline: 0px solid #393c3d;
                margin-top:5px
              } caption {
                  font-weight: bold;
                  font-size: 1.2em;
              } td {
                  padding: 5px 8px 5px 8px;
                  text-align: left;
                  border-bottom: 0px solid #1c2020;
              }
              tr {
                  border-bottom: 0px solid #1c2020;
              }

              tr:nth-of-type(even) {
                  background-color: rgb(54, 54, 54, 0.3);
              }
              tr:last-of-type {
                  border-bottom: transparent;          }
              mark {
                  background: #00E199 ;
                  color: #222627;
                  border-radius: 5px;
                  padding: 5px;
                  border: solid #008d60 2px;;
              }
              h1 {
                  background: white;
                  color: black;
                  border-radius: 5px;
                  padding: 5px;
                  font-size: 1em;
                  font-weight:normal;
                  text-align: center;
                  border: solid #999999 2px;
                  
              }
              class {
                  background: #00E199;
                  color: #222627;
                  border-radius: 10px;
                  padding: 5px;
              }
              span {
                  background: #EC4B34;
                  color: #222627;
                  border-radius: 5px;
                  padding: 5px;
                  fonty-size: 1em;
                  border: solid #9c3324 2px;
              }
              tr:nth-child(n+2) > td:nth-child(2) {
                text-align: left;
              }
#carte absences et sorties              
  - type: markdown
    content: |-
      <div>‚ùå Absences et sorties exeptionelle</div> <table>
        {% set items=state_attr('sensor.pronote_NOM_PRENOM_absences','absences') %} {% for i in range(0, items | count, 1) %} 
        <tr> 
          {%- if items[i].justified == True -%} 
          <td>
            <mark>{{ items[i].from.strftime("%d/%m") }}</mark>
          </td> 
            {% else %} 
          <td>
            <span>{{ items[i].from.strftime("%d/%m") }} {%-endif-%}</span> 
          <td>
            <h1>{{ items[i].hours }}</h1>
          </td>
          <td>{{ items[i].reason }} {% endfor %}</td>
        </tr>
      </table>
    card_mod:
      style:
        .: |
          ha-card ha-markdown {
            padding:0px;
          }
          ha-card ha-markdown.no-header {
            padding:0px;
          }
          ha-markdown {
              max-height: 160px;
              overflow-y: auto;
              border-bottom-left-radius: 10px; 
              border-bottom-right-radius: 10px;
              border-top-left-radius: 10px; 
              border-top-right-radius: 10px;
            }
        ha-markdown$: |
          div {
              background-color: rgb(54, 54, 54, 0.3);
              padding: 5px 5px;
              color:white;
              font-weight:normal;
              font-size:1em;
              border-top-left-radius: 10px; 
              border-top-right-radius: 10px;
              text-align:center;
          }
          table{
            border-collapse: collapse;
            font-family: Roboto;
            outline: 0px solid #393c3d;
            margin-top:0px;
            font-size:0.7em;
            width: 100%;
          } 
          caption {
              font-weight: bold;
              font-size: 0.7em;
          } 
          td {
              padding: 5px 8px 5px 8px;
              border-bottom: 0px solid #1c2020;
          }
          tr {
              border-bottom: 0px solid #1c2020;
          }
          tr:nth-of-type(even) {
              background-color: rgb(54, 54, 54, 0.3);
          }
          tr:last-of-type {
              border-bottom: transparent;
          }
          mark {
              background: #00BD81;
              color: #222627;
              border-radius: 5px;
              padding: 5px;
              border: solid #005f41 2px;
          }
          h1 {
              background: #00E199;
              color: #222627;
              border-radius: 5px;
              padding: 5px;
              font-size: 0.9em;
              font-weight: normal;
              text-align: center;
              border: solid #008d60 2px;
          }
          span {
              background: #EC4B34;
              color: #222627;
              border-radius: 5px;
              padding: 5px;
          }
          tr:nth-child(n+2) > td:nth-child(2) {
            text-align: left;
          }
#carte evaluations          
  - type: markdown
    content: >-
      <div>üìù Evaluations</div> <table> {% set items =
      state_attr('sensor.pronote_NOM_PRENOM_evaluations','evaluations')%}  {%
      for i in range(0, items | count, 1) %} <tr> <td width='20%'><mark> {{
      items[i].date.strftime("%d/%m") }} </td> <td width='60%'> {{
      items[i].subject }} </td> <td width='20%'>

      {% set acquisitions = items[i].acquisitions %}

      {% for j in range(0,acquisitions|count,1) %}{% if acquisitions[j].level ==
      'Tr√®s bonne ma√Ætrise' %}‚úÖ {% elif acquisitions[j].level == 'Ma√Ætrise
      satisfaisante' %}üü©{% elif acquisitions[j].level == 'Ma√Ætrise fragile' 
      %}üüß{% elif acquisitions[j].level == 'Ma√Ætrise insuffisante'  %}üü•{% else
      %}?{% endif %}{% endfor %}

      </td> </tr> {% endfor %}  </table>
    card_mod:
      style:
        .: |
          ha-card ha-markdown {
            padding:0px
          }
          ha-card ha-markdown.no-header {
            padding:0px
          }
          ha-markdown {
              max-height: 165px;
              overflow-y: auto;
              border-bottom-left-radius: 10px; 
              border-bottom-right-radius: 10px;
              border-top-left-radius: 10px; 
              border-top-right-radius: 10px;
          }
        ha-markdown$: |
          div{
              background-color: rgb(54, 54, 54, 0.3);
              padding: 5px 5px;
              color:white;
              font-weight:normal;
              text-align: center;
              font-size:1em;
              border-top-left-radius: 10px; 
              border-top-right-radius: 10px; 
              }
          table{
              border-collapse: collapse;
              font-family: Roboto;
              outline: 0px solid #393c3d;
              font-size:0.7em;
              width: 100%;
              }
          td {
              padding: 5px 8px 5px 8px;
              border-bottom: 0px solid #1c2020;
              }
          tr {
              line-height: 4px;
              margin-top:0px;
              background-color:transparent;
              }
          tr:nth-of-type(even) {
              background-color: rgb(54, 54, 54, 0.3);
              }
          tr:last-of-type {
              border-bottom: transparent;
              }
          mark {
              background: #009767;
              color: #222627;
              border-radius: 5px;
              padding: 5px;
              border: solid #005f41 2px;
              }
          span {
              background: #EC4B34;
              color: #222627;
              border-radius: 10px;
              padding: 5px;
              }
          span {
              padding: 5px;
              }
          tr:nth-child(n+2) > td:nth-child(2) {
            text-align: left;
              }
#carte devoirs              
  - type: markdown
    content: |-
      <div>üìó Devoirs</div>
      <table>
          <tbody>
              {% set items = state_attr('sensor.pronote_NOM_PRENOM_homework','homework') %}
              {%-for i in range(0, items | count, 1) -%}
              <tr>
                  <td width='17%'>
                  {%- if items[i].done == true -%}
                      <mark>
                       {{items[i].date.strftime("%d/%m")}}</td>
                      </mark>
                  {%- else -%}
                      <span>
                      {{items[i].date.strftime("%d/%m")}}
                      </span>
                  {% endif %}</td>              
                  <td>{{items[i].subject}}</td>
                  <td>{{items[i].description}}</td>
              </tr>
              {% endfor %}
        </tbody>
      </table>
    card_mod:
      style:
        .: |
          ha-card ha-markdown {
            padding:0px
          }
          ha-card ha-markdown.no-header {
            padding:0px
          }
          ha-markdown {
              max-height: 160px;
              overflow-y: auto;
              border-bottom-left-radius: 10px; 
              border-bottom-right-radius: 10px;
              border-top-left-radius: 10px; 
              border-top-right-radius: 10px;
            }
        ha-markdown$: |
          div {
              background-color:rgb(54, 54, 54, 0.3);
              padding: 5px 5px;
              color:white;
              font-weight:normal;
              font-size:1em;
              border-top-left-radius: 10px; 
              text-align: center;
               
          }
          table{
            border-collapse: collapse;
            font-size: 0.7em;
            font-family: Roboto;
            width: auto;
            outline: 0px solid #393c3d;
            margin-top: 0px;
          } caption {
              text-align: center;
              font-weight: bold;
              font-size: 1em;
          } td {
              padding: 5px 8px 5px 8px;
              text-align: left;
              border-bottom: 0px solid #1c2020;
          }
          tr {
              border-bottom: 0px solid #1c2020;
          }

          tr:nth-of-type(even) {
              background-color: rgb(54, 54, 54, 0.3);
          }
          tr:last-of-type {
              border-bottom: transparent;
          }
          mark {
              background: #009767;
              color: #222627;
              border-radius: 5px;
              padding: 5px;
          }
          span {
              background: #EC4B34;
              color: #222627;
              border-radius: 5px;
              padding: 5px;
              border: solid #9c3324 2px;
          }
          span {
              padding: 5px;
          }
          tr:nth-child(n+2) > td:nth-child(2) {
            text-align: left;
          }
#carte informations          
  - type: markdown
    content: |-
      <div>Informations college</div>
      <table>
          <tbody>
              {% set items = state_attr('sensor.pronote_NOM_PRENOM_information_and_surveys','information_and_surveys') %}
              {%-for i in range(0, items | count, 1) -%}
              <tr> 
                  <td><mark>{{items[i].author}}</mark><br>{{items[i].content}}</td>
              </tr>
              {% endfor %}
        </tbody>
      </table>
    card_mod:
      style:
        .: |
          ha-card ha-markdown {
            padding:0px
          }
          ha-card ha-markdown.no-header {
            padding:0px
          }
          ha-markdown {
              max-height: 160px;
              overflow-y: auto;
              border-bottom-left-radius: 10px; 
              border-bottom-right-radius: 10px;
              border-top-left-radius: 10px; 
              border-top-right-radius: 10px;
            }
        ha-markdown$: |
          div {
              background-color:rgb(54, 54, 54, 0.3);
              padding: 5px 5px;
              color:white;
              font-weight:normal;
              font-size:1em;
              border-top-left-radius: 10px; 
              text-align: center;
               
          }
          mark {
              background: #00BD81;
              color: #222627;
              border-radius: 5px;
              padding: 5px;
              border: solid #005f41 2px;
              font-size: 1.2em;
              }
          table{
            border-collapse: collapse;
            font-size: 0.7em;
            font-family: Roboto;
            width: auto;
            outline: 0px solid #393c3d;
            margin-top: 0px;
          } caption {
              text-align: center;
              font-weight: bold;
              font-size: 1em;
          } td {
              padding: 5px 8px 5px 8px;
              text-align: left;
              border-bottom: 0px solid #1c2020;
          }
          tr {
              border-bottom: 0px solid #1c2020;
          }

          tr:nth-of-type(even) {
              background-color: rgb(54, 54, 54, 0.3);
          }
          tr:last-of-type {
              border-bottom: transparent;
          }
          mark {
              background: #009767;
              color: #222627;
              border-radius: 5px;
              padding: 5px;
          }
          span {
              background: #EC4B34;
              color: #222627;
              border-radius: 5px;
              padding: 5px;
          }
          span {
              padding: 5px;
          }
          tr:nth-child(n+2) > td:nth-child(2) {
            text-align: left;
          }
#carte menu
  type: custom:tabbed-card
title: menu cantine nathan
styles:
  '--mdc-typography-button-font-size': 10px
  '--mdc-theme-primary': white
  '--mdc-tab-text-label-color-default': grey
  background: rgb(54, 54, 54, 0.3)
  border: solid 0.3px grey
  border-top-left-radius: 10px
  border-top-right-radius: 10px
  border-bottom-left-radius: 10px
  border-bottom-right-radius: 10px
tabs:
  - attributes:
      label: ü•óEntr√©es
    card:
      type: markdown
      content: >-
        <table>
            <tbody>
            <div>Menus cantine</div>
        {% set items = state_attr('sensor.pronote_roulet_nathan_menus','menus')
        %} {% for i in range(0, items | count, 1) %}
          {% if items[i].is_lunch == True %}
          <tr>
          <td width='11%'>      
          <mark>  
          {{ items[i].date | as_datetime | as_timestamp | timestamp_custom('%d/%m') }}
          </mark>
          </td>
          <td width='80%'> 
            {% for entry in items[i].first_meal %}
             {{ entry.name }}
            {% endfor %}
          </td>
          </td>
            {% endif %}
        {% endfor %}
          </tbody>
        </table>
      card_mod:
        style:
          .: |
            ha-card ha-markdown {
              padding:0px
            }
            ha-card ha-markdown.no-header {
              padding:0px
            }
             ha-markdown {
                max-height: 190px;
                overflow-y: auto;
                border-top-left-radius:10px;
                border-top-right-radius:10px;
                border-bottom-left-radius:10px;
                border-bottom-right-radius:10px;
              }
          ha-markdown$: |
            div {
                background-color:rgb(54, 54, 54, 0.3);
                padding: 5px 5px;
                color:white;
                font-weight:normal;
                font-size:1em;
                border-top-left-radius: 10px; 
                border-top-right-radius: 10px;
                text-align: center;
            }table{
              border-collapse: collapse;
              font-family: Roboto;
              width: 100%;
              outline: 0px solid #393c3d;
              margin-top: 0px;
              text-align: center;
            } caption {
                text-align: center;
                font-weight: bold;
                font-size: 1em;
            } td {
                padding: 5px 8px 5px 8px;
                text-align: center;
                border-bottom: 0px solid #1c2020;
                margin-top: 0px;
                font-size: 0.9em;
            }
            tr {
                border-bottom: 0px solid #1c2020;
            }

            tr:nth-of-type(even) {
                background-color: rgb(54, 54, 54, 0.3);
            }
            tr:last-of-type {
                border-bottom: transparent; 
            }
            mark {
                  background: #009767;
                  color: #222627;
                  border-radius: 5px;
                  padding: 5px;
                  border: solid #005f41 2px;
                  font-weight: normal;
                  font-size: 0.8em;
                  }
            span {
                background: #EC4B34;
                color: #222627;
                border-radius: 5px;
                padding: 5px;
            }
            tr:nth-child(n+2) > td:nth-child(2) {
              text-align: center;
            }
  - attributes:
      label: üçñPlats principal
    card:
      type: markdown
      content: >-
        <table>
            <tbody>
            <div>Menus cantine</div>
        {% set items = state_attr('sensor.pronote_roulet_nathan_menus','menus')
        %}

        {% for i in range(0, items | count, 1) %}
          {% if items[i].is_lunch == True %}
          <tr>
          <td width='11%'>      
          <mark>  
          {{ items[i].date | as_datetime | as_timestamp | timestamp_custom('%d/%m') }}
          </mark>
          </td>
          <td width='80%'> 
            {% for main in items[i].main_meal %}
              {{ main.name }}
            {% endfor %}
          </td>
            {% endif %}
        {% endfor %}
          </tbody>
        </table>
      card_mod:
        style:
          .: |
            ha-card ha-markdown {
              padding:0px
            }
            ha-card ha-markdown.no-header {
              padding:0px
            }
             ha-markdown {
                max-height: 190px;
                overflow-y: auto;
              }
          ha-markdown$: |
            div {
                background-color:rgb(54, 54, 54, 0.3);
                padding: 5px 5px;
                color:white;
                font-weight:normal;
                font-size:1em;
                border-top-left-radius: 10px; 
                border-top-right-radius: 10px;
                text-align: center;
            }
            table{
              border-collapse: collapse;
              font-family: Roboto;
              width: 100%;
              outline: 0px solid #393c3d;
              margin-top: 5px;
            } caption {
                text-align: center;
                font-weight: bold;
                font-size: 1em;
            } td {
                padding: 5px 8px 5px 8px;
                text-align: center;
                border-bottom: 0px solid #1c2020;
                margin-top: 5px;
                font-size: 0.9em;
            }
            tr {
                border-bottom: 0px solid #1c2020;
            }

            tr:nth-of-type(even) {
                background-color: rgb(54, 54, 54, 0.3);
            }
            tr:last-of-type {
                border-bottom: transparent;          }
            mark {
                  background: #009767;
                  color: #222627;
                  border-radius: 5px;
                  padding: 5px;
                  border: solid #005f41 2px;
                  font-size: 0.8em;
                  font-weight: normal;
                  }
            span {
                background: #EC4B34;
                color: #222627;
                border-radius: 5px;
                padding: 5px;
            }
            tr:nth-child(n+2) > td:nth-child(2) {
              text-align: center;
            }
  - attributes:
      label: üçüAccompagnements
    card:
      type: markdown
      content: >-
        <table>
            <tbody>
            <div>Menus cantine</div>
        {% set items = state_attr('sensor.pronote_roulet_nathan_menus','menus')
        %}

        {% for i in range(0, items | count, 1) %}
          {% if items[i].is_lunch == True %}
          <tr>
          <td width='11%'>      
          <mark>  
          {{ items[i].date | as_datetime | as_timestamp | timestamp_custom('%d/%m') }}
          </mark>
          </td>
          <td width='80%'>
            {% if items[i].side_meal %}
              {% for side in items[i].side_meal %}
                {{ side.name }}
              {% endfor %}
            {% else %}
              PAS_DISPO
            {% endif %}
          </td>
            {% endif %}
        {% endfor %}
          </tbody>
        </table>
      card_mod:
        style:
          .: |
            ha-card ha-markdown {
              padding:0px
            }
            ha-card ha-markdown.no-header {
              padding:0px
            }
             ha-markdown {
                max-height: 190px;
                overflow-y: auto;
              }
          ha-markdown$: |
            div {
                background-color:rgb(54, 54, 54, 0.3);
                padding: 5px 5px;
                color:white;
                font-weight:normal;
                font-size:1em;
                border-top-left-radius: 10px; 
                border-top-right-radius: 10px;
                text-align: center;
            }
            table{
              border-collapse: collapse;
              font-family: Roboto;
              width: 100%;
              outline: 0px solid #393c3d;
              margin-top: 5px;
            } caption {
                text-align: center;
                font-weight: bold;
                font-size: 1em;
            } td {
                padding: 5px 8px 5px 8px;
                text-align: center;
                border-bottom: 0px solid #1c2020;
                margin-top: 5px;
                font-size: 0.9em;
            }
            tr {
                border-bottom: 0px solid #1c2020;
            }

            tr:nth-of-type(even) {
                background-color: rgb(54, 54, 54, 0.3);
            }
            tr:last-of-type {
                border-bottom: transparent;          }
            mark {
                  background: #009767;
                  color: #222627;
                  border-radius: 5px;
                  padding: 5px;
                  border: solid #005f41 2px;
                  font-size: 0.8em;
                  font-weight: normal;
                  }
            span {
                background: #EC4B34;
                color: #222627;
                border-radius: 5px;
                padding: 5px;
            }
            tr:nth-child(n+2) > td:nth-child(2) {
              text-align: center;
            }
  - attributes:
      label: üßÄFromages
    card:
      type: markdown
      content: >-
        <table>
            <tbody>
            <div>Menus cantine</div>
        {% set items = state_attr('sensor.pronote_roulet_nathan_menus','menus')
        %}

        {% for i in range(0, items | count, 1) %}
          {% if items[i].is_lunch == True %}
          <tr>
          <td width='11%'>      
          <mark>  
          {{ items[i].date | as_datetime | as_timestamp | timestamp_custom('%d/%m') }}
          </mark>
          </td>
          <td width='80%'>
            {% for cheese in items[i].cheese %}
              {{ cheese.name }}
            {% endfor %}
          </td>
            {% endif %}
        {% endfor %}
          </tbody>
        </table>
      card_mod:
        style:
          .: |
            ha-card ha-markdown {
              padding:0px
            }
            ha-card ha-markdown.no-header {
              padding:0px
            }
             ha-markdown {
                max-height: 190px;
                overflow-y: auto;
              }
          ha-markdown$: |
            div {
                background-color:rgb(54, 54, 54, 0.3);
                padding: 5px 5px;
                color:white;
                font-weight:normal;
                font-size:1em;
                border-top-left-radius: 10px; 
                border-top-right-radius: 10px;
                text-align: center;
            }
            table{
              border-collapse: collapse;
              font-family: Roboto;
              width: 100%;
              outline: 0px solid #393c3d;
              margin-top: 5px;
            } caption {
                text-align: center;
                font-weight: bold;
                font-size: 1em;
            } td {
                padding: 5px 8px 5px 8px;
                text-align: center;
                border-bottom: 0px solid #1c2020;
                margin-top: 5px;
                font-size: 0.9em;
            }
            tr {
                border-bottom: 0px solid #1c2020;
            }

            tr:nth-of-type(even) {
                background-color: rgb(54, 54, 54, 0.3);
            }
            tr:last-of-type {
                border-bottom: transparent;          }
            mark {
                  background: #009767;
                  color: #222627;
                  border-radius: 5px;
                  padding: 5px;
                  border: solid #005f41 2px;
                  font-size: 0.8em;
                  font-weight: normal;
                  }
            span {
                background: #EC4B34;
                color: #222627;
                border-radius: 5px;
                padding: 5px;
            }
            tr:nth-child(n+2) > td:nth-child(2) {
              text-align: center;
            }
  - attributes:
      label: üç¶Desserts
    card:
      type: markdown
      content: >-
        <table>
            <tbody>
            <div>Menus cantine</div>
        {% set items = state_attr('sensor.pronote_roulet_nathan_menus','menus')
        %} {% for i in range(0, items | count, 1) %}
          {% if items[i].is_lunch == True %}
          <tr>
          <td width='11%'>      
          <mark>  
          {{ items[i].date | as_datetime | as_timestamp | timestamp_custom('%d/%m') }}
          </mark>
          </td>
          <td width='80%'>
            {% for dessert in items[i].dessert %}
              {{ dessert.name }}
            {% endfor %}
          </td>
            {% endif %}
        {% endfor %}
          </tbody>
        </table>
      card_mod:
        style:
          .: |
            ha-card ha-markdown {
              padding:0px
            }
            ha-card ha-markdown.no-header {
              padding:0px
            }
             ha-markdown {
                max-height: 190px;
                overflow-y: auto;
              }
          ha-markdown$: |
            div {
                background-color:rgb(54, 54, 54, 0.3);
                padding: 5px 5px;
                color:white;
                font-weight:normal;
                font-size:1em;
                border-top-left-radius: 10px; 
                border-top-right-radius: 10px;
                text-align: center;
            }
            table{
              border-collapse: collapse;
              font-family: Roboto;
              width: 100%;
              outline: 0px solid #393c3d;
              margin-top: 5px;
            } caption {
                text-align: center;
                font-weight: bold;
                font-size: 1em;
            } td {
                padding: 5px 8px 5px 8px;
                text-align: center;
                border-bottom: 0px solid #1c2020;
                margin-top: 5px;
                font-size: 0.9em;
            }
            tr {
                border-bottom: 0px solid #1c2020;
            }

            tr:nth-of-type(even) {
                background-color: rgb(54, 54, 54, 0.3);
            }
            tr:last-of-type {
                border-bottom: transparent;          }
            mark {
                  background: #009767;
                  color: #222627;
                  border-radius: 5px;
                  padding: 5px;
                  border: solid #005f41 2px;
                  font-size: 0.8em;
                  font-weight: normal;
                  }
            span {
                background: #EC4B34;
                color: #222627;
                border-radius: 5px;
                padding: 5px;
            }
            tr:nth-child(n+2) > td:nth-child(2) {
              text-align: center;
            }
